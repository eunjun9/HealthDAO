<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kh.healthDao.shopping.model.dao.ShoppingMapper">
	<resultMap id="productResultMap" type="com.kh.healthDao.admin.model.vo.Product">
		<id property="productNo" column="PRODUCT_NO"/>
		<result property="productBrand" column="PRODUCT_BRAND" />
		<result property="productTitle" column="PRODUCT_TITLE" />
		<result property="productPrice" column="PRODUCT_PRICE" />
		<result property="productBenefit" column="PRODUCT_BENEFIT" />
		<result property="productNotice" column="PRODUCT_NOTICE" />
		<result property="productInfo" column="PRODUCT_INFO" />
		<result property="productView" column="PRODUCT_VIEW" />
		<result property="productStock" column="PRODUCT_STOCK" />
		<result property="categoryId" column="CATEGORY_ID" />
		<result property="pMembership" column="P_MEMBERSHIP"/>
		<result property="productRank" column="PRODUCT_RANK"/>
		<result property="file_path" column="FILE_PATH"/>
		<result property="change_file1" column="CHANGE_FILE1"/>
		<result property="change_file2" column="CHANGE_FILE2"/>
		
		<result property="productOption" column="PRODUCT_OPTION"/>
		<result property="quantity" column="QUANTITY"/>
		<result property="sumReview" column="SUM_REVIEW"/>
		<result property="avgStar" column="AVG_STAR"/>
	</resultMap>
	
	<resultMap id="productOptionResultMap" type="com.kh.healthDao.admin.model.vo.Option">
		<id property="optionNo" column="OPTION_NO" />
		<result property="productOption" column="PRODUCT_OPTION" />
		<result property="productNo" column="PRODUCT_NO" />

		<association javaType="com.kh.healthDao.member.model.vo.Member" property="member">
			<id column="USER_NO" property="userNo"/>
		</association>

	</resultMap>
	
	<resultMap id="addressResultMap" type="com.kh.healthDao.mypage.model.vo.Address">
		<id property="addressNo" column="ADDRESS_NO"/>
		<result property="receiver" column="RECEIVER"/>
		<result property="address" column="ADDRESS"/>
		<result property="recPhone" column="RECEIVER_PHONE"/>
		<result property="defAddress" column="DEFAULT_ADDRESS"/>
		<result property="userNo" column="USER_NO"/>
  	</resultMap>

  	
  	<resultMap id="PaymentResultMap" type="com.kh.healthDao.manager.model.vo.Payment">
      <id property="payNo" column="PAY_NO"/>
      <result property="payDate" column="PAY_DATE"/>
      <result property="payMethod" column="PAY_METHOD"/>
      <result property="ordererPhone" column="ORDERER_PHONE"/>
      <result property="ordererEmail" column="ORDERER_EMAIL"/>
      <result property="orderStatus" column="ORDER_STATUS"/>
      <result property="totalPrice" column="TOTAL_PRICE"/>
      <collection property="productList" resultMap="productResultMap"/>
   </resultMap>
   
	<resultMap id="productReviewMap" type="com.kh.healthDao.admin.model.vo.Product">
		<id property="productNo" column="PRODUCT_NO"/>
		<result property="productTitle" column="PRODUCT_TITLE"/>
		
		<association javaType="com.kh.healthDao.review.model.vo.Review" property="review">
				<id property="reviewNo" column="REVIEW_NO"/>
				<result property="star" column="STAR"/>
				<result property="rContent" column="R_CONTENT"/>
				<result property="rDate" column="R_DATE"/>
				<result property="modifyDate" column="MODIFY_DATE"/>
				
				<association javaType="com.kh.healthDao.member.model.vo.Member" property="member">
					<id property="userNo" column="USER_NO"/>
					<result property="userName" column="USER_NAME"/>
				</association>
		</association>
	</resultMap>
	

	<select id="recentList" resultMap="productResultMap">
		SELECT
				P.PRODUCT_NO
			  , P.PRODUCT_BRAND
			  , P.PRODUCT_TITLE
			  , P.PRODUCT_PRICE
			  , P.PRODUCT_BENEFIT
			  , P.PRODUCT_NOTICE
			  , P.PRODUCT_INFO
			  , P.PRODUCT_VIEW
			  , P.PRODUCT_STOCK
			  , P.CATEGORY_ID
			  , P.P_MEMBERSHIP
              , (SELECT AT_FILE.FILE_PATH FROM AT_FILE JOIN PRODUCT_FILE ON(PRODUCT_FILE.F_NO = AT_FILE.F_NO) WHERE AT_FILE.STATUS='Y' AND PRODUCT_FILE.PRODUCT_NO = P.PRODUCT_NO) AS FILE_PATH
              , (SELECT AT_FILE.CHANGE_FILE FROM AT_FILE JOIN PRODUCT_FILE ON(PRODUCT_FILE.F_NO = AT_FILE.F_NO) WHERE AT_FILE.STATUS='N' AND PRODUCT_FILE.PRODUCT_NO = P.PRODUCT_NO) AS CHANGE_FILE1
              , (SELECT AT_FILE.CHANGE_FILE FROM AT_FILE JOIN PRODUCT_FILE ON(PRODUCT_FILE.F_NO = AT_FILE.F_NO) WHERE AT_FILE.STATUS='Y' AND PRODUCT_FILE.PRODUCT_NO = P.PRODUCT_NO) AS CHANGE_FILE2
		 FROM PRODUCT P
         LEFT OUTER JOIN PRODUCT_FILE PF ON(PF.PRODUCT_NO = P.PRODUCT_NO)
         LEFT OUTER JOIN AT_FILE AF ON(AF.F_NO = PF.F_NO)
		WHERE P.PRODUCT_NO  = #{productNo}
         GROUP BY P.PRODUCT_NO
			  , P.PRODUCT_BRAND
			  , P.PRODUCT_TITLE
			  , P.PRODUCT_PRICE
			  , P.PRODUCT_BENEFIT
			  , P.PRODUCT_NOTICE
			  , P.PRODUCT_INFO
			  , P.PRODUCT_VIEW
			  , P.PRODUCT_STOCK
			  , P.CATEGORY_ID
			  , P.P_MEMBERSHIP
              , FILE_PATH
	</select>
	<select id="recoRankList" resultMap="productResultMap" parameterType="_int">
		SELECT
				P.PRODUCT_NO
              , PR.PRODUCT_RANK
			  , P.PRODUCT_BRAND
			  , P.PRODUCT_TITLE
			  , P.PRODUCT_PRICE
			  , P.PRODUCT_BENEFIT
			  , P.PRODUCT_NOTICE
			  , P.PRODUCT_INFO
			  , P.PRODUCT_VIEW
			  , P.PRODUCT_STOCK
			  , P.CATEGORY_ID
			  , P.P_MEMBERSHIP
              , (SELECT AT_FILE.FILE_PATH FROM AT_FILE JOIN PRODUCT_FILE ON(PRODUCT_FILE.F_NO = AT_FILE.F_NO) WHERE AT_FILE.STATUS='Y' AND PRODUCT_FILE.PRODUCT_NO = P.PRODUCT_NO) AS FILE_PATH
              , (SELECT AT_FILE.CHANGE_FILE FROM AT_FILE JOIN PRODUCT_FILE ON(PRODUCT_FILE.F_NO = AT_FILE.F_NO) WHERE AT_FILE.STATUS='N' AND PRODUCT_FILE.PRODUCT_NO = P.PRODUCT_NO) AS CHANGE_FILE1
              , (SELECT AT_FILE.CHANGE_FILE FROM AT_FILE JOIN PRODUCT_FILE ON(PRODUCT_FILE.F_NO = AT_FILE.F_NO) WHERE AT_FILE.STATUS='Y' AND PRODUCT_FILE.PRODUCT_NO = P.PRODUCT_NO) AS CHANGE_FILE2
		 FROM PRODUCT P
         JOIN PRODUCT_RECOMMEND PR ON (P.PRODUCT_NO = PR.PRODUCT_NO)
         LEFT OUTER JOIN PRODUCT_FILE PF ON(PF.PRODUCT_NO = P.PRODUCT_NO)
         LEFT OUTER JOIN AT_FILE AF ON(AF.F_NO = PF.F_NO)
         GROUP BY P.PRODUCT_NO
              , PR.PRODUCT_RANK
			  , P.PRODUCT_BRAND
			  , P.PRODUCT_TITLE
			  , P.PRODUCT_PRICE
			  , P.PRODUCT_BENEFIT
			  , P.PRODUCT_NOTICE
			  , P.PRODUCT_INFO
			  , P.PRODUCT_VIEW
			  , P.PRODUCT_STOCK
			  , P.CATEGORY_ID
			  , P.P_MEMBERSHIP
              , FILE_PATH
        ORDER BY PRODUCT_RANK ASC
	</select>
	<insert id="insertReco" parameterType="com.kh.healthDao.admin.model.vo.Product">
		INSERT 
		INTO PRODUCT_RECOMMEND
		(
			PRODUCT_NO
		  , PRODUCT_RANK
		)VALUES(
		    #{productNo}
		  , #{productRank}
		)
	</insert>
	<select id="detailPdt" resultMap="productResultMap" parameterType="_int">
		SELECT
				PRODUCT_NO
              , PRODUCT_RANK
			  , PRODUCT_BRAND
			  , PRODUCT_TITLE
			  , PRODUCT_PRICE
			  , PRODUCT_BENEFIT
			  , PRODUCT_NOTICE
			  , PRODUCT_INFO
			  , PRODUCT_VIEW
			  , PRODUCT_STOCK
			  , CATEGORY_ID
			  , P_MEMBERSHIP
		 FROM PRODUCT
         LEFT JOIN PRODUCT_RECOMMEND USING (PRODUCT_NO)
		WHERE PRODUCT_NO = #{productNo}
	</select>
	<select id="recoList" resultMap="productResultMap">
		SELECT
				P.PRODUCT_NO
              , PR.PRODUCT_RANK
			  , P.PRODUCT_BRAND
			  , P.PRODUCT_TITLE
			  , P.PRODUCT_PRICE
			  , P.PRODUCT_BENEFIT
			  , P.PRODUCT_NOTICE
			  , P.PRODUCT_INFO
			  , P.PRODUCT_VIEW
			  , P.PRODUCT_STOCK
			  , P.CATEGORY_ID
			  , P.P_MEMBERSHIP
              , COUNT(DISTINCT R.REVIEW_NO) AS SUM_REVIEW
              , ROUND((SUM(R.STAR)) / COUNT(R.REVIEW_NO), 1) AS AVG_STAR
              , (SELECT AT_FILE.FILE_PATH FROM AT_FILE JOIN PRODUCT_FILE ON(PRODUCT_FILE.F_NO = AT_FILE.F_NO) WHERE AT_FILE.STATUS='Y' AND PRODUCT_FILE.PRODUCT_NO = P.PRODUCT_NO) AS FILE_PATH
              , (SELECT AT_FILE.CHANGE_FILE FROM AT_FILE JOIN PRODUCT_FILE ON(PRODUCT_FILE.F_NO = AT_FILE.F_NO) WHERE AT_FILE.STATUS='N' AND PRODUCT_FILE.PRODUCT_NO = P.PRODUCT_NO) AS CHANGE_FILE1
              , (SELECT AT_FILE.CHANGE_FILE FROM AT_FILE JOIN PRODUCT_FILE ON(PRODUCT_FILE.F_NO = AT_FILE.F_NO) WHERE AT_FILE.STATUS='Y' AND PRODUCT_FILE.PRODUCT_NO = P.PRODUCT_NO) AS CHANGE_FILE2
		 FROM PRODUCT P
		 LEFT JOIN PRODUCT_RECOMMEND PR ON (P.PRODUCT_NO = PR.PRODUCT_NO)
         LEFT OUTER JOIN PAY_DETAIL PD ON(P.PRODUCT_NO = PD.PRODUCT_NO)
         LEFT OUTER JOIN REVIEW R ON(PD.PAY_NO = R.PAY_NO)
         LEFT OUTER JOIN PRODUCT_FILE PF ON(PF.PRODUCT_NO = P.PRODUCT_NO)
         LEFT OUTER JOIN AT_FILE AF ON(AF.F_NO = PF.F_NO)
         GROUP BY P.PRODUCT_NO
              , PR.PRODUCT_RANK
			  , P.PRODUCT_BRAND
			  , P.PRODUCT_TITLE
			  , P.PRODUCT_PRICE
			  , P.PRODUCT_BENEFIT
			  , P.PRODUCT_NOTICE
			  , P.PRODUCT_INFO
			  , P.PRODUCT_VIEW
			  , P.PRODUCT_STOCK
			  , P.CATEGORY_ID
			  , P.P_MEMBERSHIP
              , FILE_PATH
	</select>
	
	<select id="pdtList" resultMap="productResultMap">
		SELECT
				P.PRODUCT_NO
              , PR.PRODUCT_RANK
			  , P.PRODUCT_BRAND
			  , P.PRODUCT_TITLE
			  , P.PRODUCT_PRICE
			  , P.PRODUCT_BENEFIT
			  , P.PRODUCT_NOTICE
			  , P.PRODUCT_INFO
			  , P.PRODUCT_VIEW
			  , P.PRODUCT_STOCK
			  , P.CATEGORY_ID
			  , P.P_MEMBERSHIP
              , COUNT(DISTINCT R.REVIEW_NO) AS SUM_REVIEW
              , ROUND((SUM(R.STAR)) / COUNT(R.REVIEW_NO), 1) AS AVG_STAR
              , (SELECT AT_FILE.FILE_PATH FROM AT_FILE JOIN PRODUCT_FILE ON(PRODUCT_FILE.F_NO = AT_FILE.F_NO) WHERE AT_FILE.STATUS='Y' AND PRODUCT_FILE.PRODUCT_NO = P.PRODUCT_NO) AS FILE_PATH
              , (SELECT AT_FILE.CHANGE_FILE FROM AT_FILE JOIN PRODUCT_FILE ON(PRODUCT_FILE.F_NO = AT_FILE.F_NO) WHERE AT_FILE.STATUS='N' AND PRODUCT_FILE.PRODUCT_NO = P.PRODUCT_NO) AS CHANGE_FILE1
              , (SELECT AT_FILE.CHANGE_FILE FROM AT_FILE JOIN PRODUCT_FILE ON(PRODUCT_FILE.F_NO = AT_FILE.F_NO) WHERE AT_FILE.STATUS='Y' AND PRODUCT_FILE.PRODUCT_NO = P.PRODUCT_NO) AS CHANGE_FILE2
		 FROM PRODUCT P
         JOIN PRODUCT_RECOMMEND PR ON (P.PRODUCT_NO = PR.PRODUCT_NO)
         LEFT OUTER JOIN PAY_DETAIL PD ON(P.PRODUCT_NO = PD.PRODUCT_NO)
         LEFT OUTER JOIN REVIEW R ON(PD.PAY_NO = R.PAY_NO)
         LEFT OUTER JOIN PRODUCT_FILE PF ON(PF.PRODUCT_NO = P.PRODUCT_NO)
         LEFT OUTER JOIN AT_FILE AF ON(AF.F_NO = PF.F_NO)
         GROUP BY P.PRODUCT_NO
              , PR.PRODUCT_RANK
			  , P.PRODUCT_BRAND
			  , P.PRODUCT_TITLE
			  , P.PRODUCT_PRICE
			  , P.PRODUCT_BENEFIT
			  , P.PRODUCT_NOTICE
			  , P.PRODUCT_INFO
			  , P.PRODUCT_VIEW
			  , P.PRODUCT_STOCK
			  , P.CATEGORY_ID
			  , P.P_MEMBERSHIP
              , FILE_PATH
        ORDER BY PRODUCT_RANK ASC
	</select>
	
	<select id="selectReco" resultMap="productResultMap" parameterType="_int">
		SELECT
				PRODUCT_NO
              , PRODUCT_RANK
		 FROM PRODUCT_RECOMMEND
		WHERE PRODUCT_NO = #{productNo}
	</select>
	
	 <update id="modifyReco" parameterType="com.kh.healthDao.admin.model.vo.Product">
	 UPDATE PRODUCT_RECOMMEND
		SET PRODUCT_RANK = #{productRank}
	  WHERE PRODUCT_NO = #{productNo}
	</update>
	
	<delete id="deleteReco">
		DELETE
			   PRODUCT_RECOMMEND
		 WHERE PRODUCT_NO = #{productNo}
	</delete>
	
	<select id="pdtListCount" resultType="_int">
		SELECT
		    COUNT(*)
		FROM
		(SELECT
				PRODUCT_NO
			  , PRODUCT_BRAND
			  , PRODUCT_TITLE
			  , PRODUCT_PRICE
			  , PRODUCT_BENEFIT
			  , PRODUCT_NOTICE
			  , PRODUCT_INFO
			  , PRODUCT_VIEW
			  , PRODUCT_STOCK
			  , CATEGORY_ID
			  , P_MEMBERSHIP
		 FROM PRODUCT)
	</select>
	
	<select id="recoListCount" resultType="_int">
		SELECT
		    COUNT(*)
		FROM
		(SELECT
				PRODUCT_NO
              , PRODUCT_RANK
			  , PRODUCT_BRAND
			  , PRODUCT_TITLE
			  , PRODUCT_PRICE
			  , PRODUCT_BENEFIT
			  , PRODUCT_NOTICE
			  , PRODUCT_INFO
			  , PRODUCT_VIEW
			  , PRODUCT_STOCK
			  , CATEGORY_ID
			  , P_MEMBERSHIP
		 FROM PRODUCT
         RIGHT JOIN PRODUCT_RECOMMEND USING (PRODUCT_NO))
	</select>
	
	<select id="wishList" resultMap="productResultMap">
		SELECT
				PL.LIKE_NO
              , P.PRODUCT_NO
              , PL.USER_NO
			  , P.PRODUCT_BRAND
			  , P.PRODUCT_TITLE
			  , P.PRODUCT_PRICE
			  , P.PRODUCT_BENEFIT
			  , P.PRODUCT_NOTICE
			  , P.PRODUCT_INFO
			  , P.PRODUCT_VIEW
			  , P.PRODUCT_STOCK
			  , P.CATEGORY_ID
			  , P.P_MEMBERSHIP
              , COUNT(DISTINCT R.REVIEW_NO) AS SUM_REVIEW
              , ROUND((SUM(R.STAR)) / COUNT(R.REVIEW_NO), 1) AS AVG_STAR
              , (SELECT AT_FILE.FILE_PATH FROM AT_FILE JOIN PRODUCT_FILE ON(PRODUCT_FILE.F_NO = AT_FILE.F_NO) WHERE AT_FILE.STATUS='Y' AND PRODUCT_FILE.PRODUCT_NO = P.PRODUCT_NO) AS FILE_PATH
              , (SELECT AT_FILE.CHANGE_FILE FROM AT_FILE JOIN PRODUCT_FILE ON(PRODUCT_FILE.F_NO = AT_FILE.F_NO) WHERE AT_FILE.STATUS='N' AND PRODUCT_FILE.PRODUCT_NO = P.PRODUCT_NO) AS CHANGE_FILE1
		 FROM PRODUCT_LIKE PL
         JOIN PRODUCT P ON (PL.PRODUCT_NO = P.PRODUCT_NO)
         LEFT OUTER JOIN PAY_DETAIL PD ON(PL.PRODUCT_NO = PD.PRODUCT_NO)
         LEFT OUTER JOIN REVIEW R ON(PD.PAY_NO = R.PAY_NO)
         LEFT OUTER JOIN PRODUCT_FILE PF ON(PF.PRODUCT_NO = PL.PRODUCT_NO)
         LEFT OUTER JOIN AT_FILE AF ON(AF.F_NO = PF.F_NO)
        WHERE PL.USER_NO = #{userNo}
        GROUP BY PL.LIKE_NO
              , P.PRODUCT_NO
              , PL.USER_NO
			  , P.PRODUCT_BRAND
			  , P.PRODUCT_TITLE
			  , P.PRODUCT_PRICE
			  , P.PRODUCT_BENEFIT
			  , P.PRODUCT_NOTICE
			  , P.PRODUCT_INFO
			  , P.PRODUCT_VIEW
			  , P.PRODUCT_STOCK
			  , P.CATEGORY_ID
			  , P.P_MEMBERSHIP
              , FILE_PATH
	</select>
	<select id="wishListCount" resultType="_int">
		SELECT
		    COUNT(*)
		FROM
		(SELECT
				LIKE_NO
              , PRODUCT_NO
			  , PRODUCT_BRAND
			  , PRODUCT_TITLE
			  , PRODUCT_PRICE
			  , PRODUCT_BENEFIT
			  , PRODUCT_NOTICE
			  , PRODUCT_INFO
			  , PRODUCT_VIEW
			  , PRODUCT_STOCK
			  , CATEGORY_ID
			  , P_MEMBERSHIP
              , USER_NO
		 FROM PRODUCT_LIKE
		 JOIN PRODUCT USING (PRODUCT_NO)
        WHERE USER_NO = #{userNo})
	</select>
	
	<select id="wishChk" parameterType="com.kh.healthDao.admin.model.vo.Product" resultMap="productResultMap">
		SELECT
				LIKE_NO
			  , PRODUCT_NO
			  , USER_NO
		  FROM PRODUCT_LIKE
		 WHERE USER_NO = #{userNo}
		   AND PRODUCT_NO = #{productNo}
	</select>
	
	<insert id="insertWish" parameterType="com.kh.healthDao.admin.model.vo.Product">
		INSERT 
		INTO PRODUCT_LIKE
		(
			LIKE_NO
		  , PRODUCT_NO
		  , USER_NO
		)VALUES(
			SEQ_LIKE_NO.NEXTVAL
		  , #{productNo}
		  , #{userNo}
		)
	</insert>
	
	<delete id="deleteWish" parameterType="com.kh.healthDao.admin.model.vo.Product">
		DELETE
			   PRODUCT_LIKE
		 WHERE USER_NO = #{userNo}
		   AND PRODUCT_NO = #{productNo}
	</delete>
	
	
	<select id="findLikeList" resultType="_int">
		SELECT
				PRODUCT_NO
		  FROM PRODUCT
          JOIN PRODUCT_LIKE USING (PRODUCT_NO)
         WHERE USER_NO = #{userNo}
	</select>
	
	
	<select id="shoppingList" resultMap="productResultMap" parameterType="hashmap">
		SELECT *
				FROM
				    (SELECT ROWNUM RNUM, A.*
				            FROM
				            (SELECT
								P.PRODUCT_NO
							  , P.PRODUCT_BRAND
							  , P.PRODUCT_TITLE
							  , P.PRODUCT_PRICE
							  , P.PRODUCT_NOTICE
							  , P.PRODUCT_INFO
							  , P.PRODUCT_VIEW
							  , P.PRODUCT_STOCK
							  , P.CATEGORY_ID
							  , P.P_MEMBERSHIP
				              , COUNT(DISTINCT R.REVIEW_NO) AS SUM_REVIEW
				              , ROUND((SUM(R.STAR)) / COUNT(R.REVIEW_NO), 1) AS AVG_STAR
				              , (SELECT AT_FILE.FILE_PATH FROM AT_FILE JOIN PRODUCT_FILE ON(PRODUCT_FILE.F_NO = AT_FILE.F_NO) WHERE AT_FILE.STATUS='Y' AND PRODUCT_FILE.PRODUCT_NO = P.PRODUCT_NO) AS FILE_PATH
				              , (SELECT AT_FILE.CHANGE_FILE FROM AT_FILE JOIN PRODUCT_FILE ON(PRODUCT_FILE.F_NO = AT_FILE.F_NO) WHERE AT_FILE.STATUS='N' AND PRODUCT_FILE.PRODUCT_NO = P.PRODUCT_NO) AS CHANGE_FILE1
				              , (SELECT AT_FILE.CHANGE_FILE FROM AT_FILE JOIN PRODUCT_FILE ON(PRODUCT_FILE.F_NO = AT_FILE.F_NO) WHERE AT_FILE.STATUS='Y' AND PRODUCT_FILE.PRODUCT_NO = P.PRODUCT_NO) AS CHANGE_FILE2
						 FROM PRODUCT P
				         LEFT OUTER JOIN PAY_DETAIL PD ON(P.PRODUCT_NO = PD.PRODUCT_NO)
				         LEFT OUTER JOIN REVIEW R ON(PD.PAY_NO = R.PAY_NO)
				         LEFT OUTER JOIN PRODUCT_FILE PF ON(PF.PRODUCT_NO = P.PRODUCT_NO)
				         LEFT OUTER JOIN AT_FILE AF ON(AF.F_NO = PF.F_NO)
				         GROUP BY P.PRODUCT_NO
							  , P.PRODUCT_BRAND
							  , P.PRODUCT_TITLE
							  , P.PRODUCT_PRICE
							  , P.PRODUCT_BENEFIT
							  , P.PRODUCT_NOTICE
							  , P.PRODUCT_INFO
							  , P.PRODUCT_VIEW
							  , P.PRODUCT_STOCK
							  , P.CATEGORY_ID
							  , P.P_MEMBERSHIP
				              , FILE_PATH
				 ORDER BY PRODUCT_NO DESC) A
		    )
			WHERE RNUM BETWEEN #{startRow} AND #{endRow}
		
	</select>
	
	<!-- 신상품 -->
	<select id="shoppingListCount" resultType="_int">
		SELECT
		    COUNT(*)
		FROM
		(SELECT
				PRODUCT_NO
			  , PRODUCT_BRAND
			  , PRODUCT_TITLE
			  , PRODUCT_PRICE
			  
		 FROM PRODUCT
		 ORDER BY PRODUCT_NO DESC)
	</select>
	
	<!-- 식품 -->
	<select id="foodShoppingListCount" resultType="_int">
		SELECT
		    COUNT(*)
		FROM
		(SELECT
				PRODUCT_NO
			  , PRODUCT_BRAND
			  , PRODUCT_TITLE
			  , PRODUCT_PRICE
			  , CATEGORY_ID 
		 FROM PRODUCT
		WHERE CATEGORY_ID='식품'
		ORDER BY PRODUCT_NO DESC)
	</select>
	
	<!-- 음료 -->
	<select id="beverageShoppingListCount" resultType="_int">
		SELECT
		    COUNT(*)
		FROM
		(SELECT
				PRODUCT_NO
			  , PRODUCT_BRAND
			  , PRODUCT_TITLE
			  , PRODUCT_PRICE
			  , CATEGORY_ID 
		 FROM PRODUCT
		WHERE CATEGORY_ID='음료'
		ORDER BY PRODUCT_NO DESC)
	</select>
	
	<!-- 음료 -->
	<select id="goodsShoppingListCount" resultType="_int">
		SELECT
		    COUNT(*)
		FROM
		(SELECT
				PRODUCT_NO
			  , PRODUCT_BRAND
			  , PRODUCT_TITLE
			  , PRODUCT_PRICE
			  , CATEGORY_ID 
		 FROM PRODUCT
		WHERE CATEGORY_ID='운동기구'
		ORDER BY PRODUCT_NO DESC)
	</select>
	
	<select id="searchList" resultMap="productResultMap" parameterType="String">
		SELECT
				P.PRODUCT_NO
			  , P.PRODUCT_BRAND
			  , P.PRODUCT_TITLE
			  , P.PRODUCT_PRICE
			  , P.PRODUCT_BENEFIT
			  , P.PRODUCT_NOTICE
			  , P.PRODUCT_INFO
			  , P.PRODUCT_VIEW
			  , P.PRODUCT_STOCK
			  , P.CATEGORY_ID
			  , P.P_MEMBERSHIP
              , COUNT(DISTINCT R.REVIEW_NO) AS SUM_REVIEW
              , ROUND((SUM(R.STAR)) / COUNT(R.REVIEW_NO), 1) AS AVG_STAR
              , (SELECT AT_FILE.FILE_PATH FROM AT_FILE JOIN PRODUCT_FILE ON(PRODUCT_FILE.F_NO = AT_FILE.F_NO) WHERE AT_FILE.STATUS='Y' AND PRODUCT_FILE.PRODUCT_NO = P.PRODUCT_NO) AS FILE_PATH
              , (SELECT AT_FILE.CHANGE_FILE FROM AT_FILE JOIN PRODUCT_FILE ON(PRODUCT_FILE.F_NO = AT_FILE.F_NO) WHERE AT_FILE.STATUS='N' AND PRODUCT_FILE.PRODUCT_NO = P.PRODUCT_NO) AS CHANGE_FILE1
              , (SELECT AT_FILE.CHANGE_FILE FROM AT_FILE JOIN PRODUCT_FILE ON(PRODUCT_FILE.F_NO = AT_FILE.F_NO) WHERE AT_FILE.STATUS='Y' AND PRODUCT_FILE.PRODUCT_NO = P.PRODUCT_NO) AS CHANGE_FILE2
		 FROM PRODUCT P
         LEFT OUTER JOIN PAY_DETAIL PD ON(P.PRODUCT_NO = PD.PRODUCT_NO)
         LEFT OUTER JOIN REVIEW R ON(PD.PAY_NO = R.PAY_NO)
         LEFT OUTER JOIN PRODUCT_FILE PF ON(PF.PRODUCT_NO = P.PRODUCT_NO)
         LEFT OUTER JOIN AT_FILE AF ON(AF.F_NO = PF.F_NO)
         WHERE PRODUCT_BRAND LIKE '%'|| #{searchPdt} ||'%'
            OR PRODUCT_TITLE LIKE '%'|| #{searchPdt} ||'%'
         GROUP BY P.PRODUCT_NO
			  , P.PRODUCT_BRAND
			  , P.PRODUCT_TITLE
			  , P.PRODUCT_PRICE
			  , P.PRODUCT_BENEFIT
			  , P.PRODUCT_NOTICE
			  , P.PRODUCT_INFO
			  , P.PRODUCT_VIEW
			  , P.PRODUCT_STOCK
			  , P.CATEGORY_ID
			  , P.P_MEMBERSHIP
              , FILE_PATH
	</select>
	
	<select id="NewProductSelect" resultMap="productResultMap">
		SELECT
				P.PRODUCT_NO
			  , P.PRODUCT_BRAND
			  , P.PRODUCT_TITLE
			  , P.PRODUCT_PRICE
              , (SELECT AT_FILE.FILE_PATH FROM AT_FILE JOIN PRODUCT_FILE ON(PRODUCT_FILE.F_NO = AT_FILE.F_NO) WHERE AT_FILE.STATUS='Y' AND PRODUCT_FILE.PRODUCT_NO = P.PRODUCT_NO) AS FILE_PATH
              , (SELECT AT_FILE.CHANGE_FILE FROM AT_FILE JOIN PRODUCT_FILE ON(PRODUCT_FILE.F_NO = AT_FILE.F_NO) WHERE AT_FILE.STATUS='N' AND PRODUCT_FILE.PRODUCT_NO = P.PRODUCT_NO) AS CHANGE_FILE1
              , (SELECT AT_FILE.CHANGE_FILE FROM AT_FILE JOIN PRODUCT_FILE ON(PRODUCT_FILE.F_NO = AT_FILE.F_NO) WHERE AT_FILE.STATUS='Y' AND PRODUCT_FILE.PRODUCT_NO = P.PRODUCT_NO) AS CHANGE_FILE2
		 FROM PRODUCT P
         LEFT OUTER JOIN PRODUCT_FILE PF ON(PF.PRODUCT_NO = P.PRODUCT_NO)
         LEFT OUTER JOIN AT_FILE AF ON(AF.F_NO = PF.F_NO)
         GROUP BY P.PRODUCT_NO
			  , P.PRODUCT_BRAND
			  , P.PRODUCT_TITLE
			  , P.PRODUCT_PRICE
              , FILE_PATH
		 ORDER BY PRODUCT_NO DESC
	</select>
	
	<select id="foodShoppingList" resultMap="productResultMap">
		SELECT
				P.PRODUCT_NO
			  , P.PRODUCT_BRAND
			  , P.PRODUCT_TITLE
			  , P.PRODUCT_PRICE
			  , P.PRODUCT_BENEFIT
			  , P.PRODUCT_NOTICE
			  , P.PRODUCT_INFO
			  , P.PRODUCT_VIEW
			  , P.PRODUCT_STOCK
			  , P.CATEGORY_ID
			  , P.P_MEMBERSHIP
              , COUNT(DISTINCT R.REVIEW_NO) AS SUM_REVIEW
              , ROUND((SUM(R.STAR)) / COUNT(R.REVIEW_NO), 1) AS AVG_STAR
              , (SELECT AT_FILE.FILE_PATH FROM AT_FILE JOIN PRODUCT_FILE ON(PRODUCT_FILE.F_NO = AT_FILE.F_NO) WHERE AT_FILE.STATUS='Y' AND PRODUCT_FILE.PRODUCT_NO = P.PRODUCT_NO) AS FILE_PATH
              , (SELECT AT_FILE.CHANGE_FILE FROM AT_FILE JOIN PRODUCT_FILE ON(PRODUCT_FILE.F_NO = AT_FILE.F_NO) WHERE AT_FILE.STATUS='N' AND PRODUCT_FILE.PRODUCT_NO = P.PRODUCT_NO) AS CHANGE_FILE1
              , (SELECT AT_FILE.CHANGE_FILE FROM AT_FILE JOIN PRODUCT_FILE ON(PRODUCT_FILE.F_NO = AT_FILE.F_NO) WHERE AT_FILE.STATUS='Y' AND PRODUCT_FILE.PRODUCT_NO = P.PRODUCT_NO) AS CHANGE_FILE2
		 FROM PRODUCT P
         LEFT OUTER JOIN PAY_DETAIL PD ON(P.PRODUCT_NO = PD.PRODUCT_NO)
         LEFT OUTER JOIN REVIEW R ON(PD.PAY_NO = R.PAY_NO)
         LEFT OUTER JOIN PRODUCT_FILE PF ON(PF.PRODUCT_NO = P.PRODUCT_NO)
         LEFT OUTER JOIN AT_FILE AF ON(AF.F_NO = PF.F_NO)
		WHERE CATEGORY_ID='식품'
         GROUP BY P.PRODUCT_NO
			  , P.PRODUCT_BRAND
			  , P.PRODUCT_TITLE
			  , P.PRODUCT_PRICE
			  , P.PRODUCT_BENEFIT
			  , P.PRODUCT_NOTICE
			  , P.PRODUCT_INFO
			  , P.PRODUCT_VIEW
			  , P.PRODUCT_STOCK
			  , P.CATEGORY_ID
			  , P.P_MEMBERSHIP
              , FILE_PATH
		ORDER BY PRODUCT_NO DESC
	</select>
	
	<select id="beverageShoppingList" resultMap="productResultMap">
		SELECT
				P.PRODUCT_NO
			  , P.PRODUCT_BRAND
			  , P.PRODUCT_TITLE
			  , P.PRODUCT_PRICE
			  , P.PRODUCT_BENEFIT
			  , P.PRODUCT_NOTICE
			  , P.PRODUCT_INFO
			  , P.PRODUCT_VIEW
			  , P.PRODUCT_STOCK
			  , P.CATEGORY_ID
			  , P.P_MEMBERSHIP
              , COUNT(DISTINCT R.REVIEW_NO) AS SUM_REVIEW
              , ROUND((SUM(R.STAR)) / COUNT(R.REVIEW_NO), 1) AS AVG_STAR
              , (SELECT AT_FILE.FILE_PATH FROM AT_FILE JOIN PRODUCT_FILE ON(PRODUCT_FILE.F_NO = AT_FILE.F_NO) WHERE AT_FILE.STATUS='Y' AND PRODUCT_FILE.PRODUCT_NO = P.PRODUCT_NO) AS FILE_PATH
              , (SELECT AT_FILE.CHANGE_FILE FROM AT_FILE JOIN PRODUCT_FILE ON(PRODUCT_FILE.F_NO = AT_FILE.F_NO) WHERE AT_FILE.STATUS='N' AND PRODUCT_FILE.PRODUCT_NO = P.PRODUCT_NO) AS CHANGE_FILE1
              , (SELECT AT_FILE.CHANGE_FILE FROM AT_FILE JOIN PRODUCT_FILE ON(PRODUCT_FILE.F_NO = AT_FILE.F_NO) WHERE AT_FILE.STATUS='Y' AND PRODUCT_FILE.PRODUCT_NO = P.PRODUCT_NO) AS CHANGE_FILE2
		 FROM PRODUCT P
         LEFT OUTER JOIN PAY_DETAIL PD ON(P.PRODUCT_NO = PD.PRODUCT_NO)
         LEFT OUTER JOIN REVIEW R ON(PD.PAY_NO = R.PAY_NO)
         LEFT OUTER JOIN PRODUCT_FILE PF ON(PF.PRODUCT_NO = P.PRODUCT_NO)
         LEFT OUTER JOIN AT_FILE AF ON(AF.F_NO = PF.F_NO)
		WHERE CATEGORY_ID='음료'
         GROUP BY P.PRODUCT_NO
			  , P.PRODUCT_BRAND
			  , P.PRODUCT_TITLE
			  , P.PRODUCT_PRICE
			  , P.PRODUCT_BENEFIT
			  , P.PRODUCT_NOTICE
			  , P.PRODUCT_INFO
			  , P.PRODUCT_VIEW
			  , P.PRODUCT_STOCK
			  , P.CATEGORY_ID
			  , P.P_MEMBERSHIP
              , FILE_PATH
		ORDER BY PRODUCT_NO DESC
	</select>
	
	<select id="goodsShoppingList" resultMap="productResultMap">
		SELECT
				P.PRODUCT_NO
			  , P.PRODUCT_BRAND
			  , P.PRODUCT_TITLE
			  , P.PRODUCT_PRICE
			  , P.PRODUCT_BENEFIT
			  , P.PRODUCT_NOTICE
			  , P.PRODUCT_INFO
			  , P.PRODUCT_VIEW
			  , P.PRODUCT_STOCK
			  , P.CATEGORY_ID
			  , P.P_MEMBERSHIP
              , COUNT(DISTINCT R.REVIEW_NO) AS SUM_REVIEW
              , ROUND((SUM(R.STAR)) / COUNT(R.REVIEW_NO), 1) AS AVG_STAR
              , (SELECT AT_FILE.FILE_PATH FROM AT_FILE JOIN PRODUCT_FILE ON(PRODUCT_FILE.F_NO = AT_FILE.F_NO) WHERE AT_FILE.STATUS='Y' AND PRODUCT_FILE.PRODUCT_NO = P.PRODUCT_NO) AS FILE_PATH
              , (SELECT AT_FILE.CHANGE_FILE FROM AT_FILE JOIN PRODUCT_FILE ON(PRODUCT_FILE.F_NO = AT_FILE.F_NO) WHERE AT_FILE.STATUS='N' AND PRODUCT_FILE.PRODUCT_NO = P.PRODUCT_NO) AS CHANGE_FILE1
              , (SELECT AT_FILE.CHANGE_FILE FROM AT_FILE JOIN PRODUCT_FILE ON(PRODUCT_FILE.F_NO = AT_FILE.F_NO) WHERE AT_FILE.STATUS='Y' AND PRODUCT_FILE.PRODUCT_NO = P.PRODUCT_NO) AS CHANGE_FILE2
		 FROM PRODUCT P
         LEFT OUTER JOIN PAY_DETAIL PD ON(P.PRODUCT_NO = PD.PRODUCT_NO)
         LEFT OUTER JOIN REVIEW R ON(PD.PAY_NO = R.PAY_NO)
         LEFT OUTER JOIN PRODUCT_FILE PF ON(PF.PRODUCT_NO = P.PRODUCT_NO)
         LEFT OUTER JOIN AT_FILE AF ON(AF.F_NO = PF.F_NO)
		WHERE CATEGORY_ID='운동기구'
         GROUP BY P.PRODUCT_NO
			  , P.PRODUCT_BRAND
			  , P.PRODUCT_TITLE
			  , P.PRODUCT_PRICE
			  , P.PRODUCT_BENEFIT
			  , P.PRODUCT_NOTICE
			  , P.PRODUCT_INFO
			  , P.PRODUCT_VIEW
			  , P.PRODUCT_STOCK
			  , P.CATEGORY_ID
			  , P.P_MEMBERSHIP
              , FILE_PATH
		ORDER BY PRODUCT_NO DESC
	</select>
	
	<select id="shoppingDetail" resultMap="productResultMap" parameterType="_int">
		SELECT
				P.PRODUCT_NO
			  , P.PRODUCT_BRAND
			  , P.PRODUCT_TITLE
			  , P.PRODUCT_PRICE
			  , P.PRODUCT_NOTICE
			  , P.PRODUCT_BENEFIT
			  , PO.PRODUCT_OPTION
			  , (SELECT AT_FILE.FILE_PATH FROM AT_FILE JOIN PRODUCT_FILE ON(PRODUCT_FILE.F_NO = AT_FILE.F_NO) WHERE AT_FILE.STATUS='Y' AND PRODUCT_FILE.PRODUCT_NO = P.PRODUCT_NO) AS FILE_PATH
              , (SELECT AT_FILE.CHANGE_FILE FROM AT_FILE JOIN PRODUCT_FILE ON(PRODUCT_FILE.F_NO = AT_FILE.F_NO) WHERE AT_FILE.STATUS='N' AND PRODUCT_FILE.PRODUCT_NO = P.PRODUCT_NO) AS CHANGE_FILE1
              , (SELECT AT_FILE.CHANGE_FILE FROM AT_FILE JOIN PRODUCT_FILE ON(PRODUCT_FILE.F_NO = AT_FILE.F_NO) WHERE AT_FILE.STATUS='Y' AND PRODUCT_FILE.PRODUCT_NO = P.PRODUCT_NO) AS CHANGE_FILE2
		   FROM PRODUCT P
		   JOIN PRODUCT_OPTION PO ON(P.PRODUCT_NO = PO.PRODUCT_NO)
		   LEFT OUTER JOIN PRODUCT_FILE PF ON(PF.PRODUCT_NO = P.PRODUCT_NO)
           LEFT OUTER JOIN AT_FILE AF ON(AF.F_NO = PF.F_NO)
		  WHERE PRODUCT_NO = #{productNo}
		  GROUP BY P.PRODUCT_NO
			  , P.PRODUCT_BRAND
			  , P.PRODUCT_TITLE
			  , P.PRODUCT_PRICE
			  , P.PRODUCT_NOTICE
			  , P.PRODUCT_BENEFIT
			  , PO.PRODUCT_OPTION
	</select>
		
	<select id="shoppingReview" resultMap="productReviewMap" parameterType="_int">
		SELECT
		       P.PRODUCT_NO
		     , P.PRODUCT_TITLE
		     , RV.REVIEW_NO
		     , RV.STAR
		     , RV.R_CONTENT
		     , RV.R_DATE
		     , RV.MODIFY_DATE
		     , M.USER_NAME
		  FROM PRODUCT P
		  LEFT OUTER JOIN REVIEW RV ON(P.PRODUCT_NO = RV.PRODUCT_NO)
		  LEFT OUTER JOIN MEMBER M ON(RV.USER_NO = M.USER_NO)
		 GROUP BY P.PRODUCT_NO
		     , P.PRODUCT_TITLE
		     , RV.REVIEW_NO
		     , RV.STAR
		     , RV.R_CONTENT
		     , RV.R_DATE
		     , RV.MODIFY_DATE
		     , M.USER_NAME
		HAVING P.PRODUCT_NO = #{productNo}
	</select>
	
	<select id="sumReview" resultType="String" parameterType="_int">
		SELECT COUNT(*)
		  FROM REVIEW
		 WHERE PRODUCT_NO = #{productNo}
	</select>
	
	<select id="avgStar" resultType="String" parameterType="_int">
		SELECT ROUND((SUM(STAR)) / COUNT(REVIEW_NO), 1)
		  FROM REVIEW
		 WHERE PRODUCT_NO = #{productNo}
	</select>
	
	<select id="shoppingQuantity" parameterType="com.kh.healthDao.admin.model.vo.Product">
		INSERT 
		INTO PRODUCT
		(
			PAY_NO
		  , QUANTITY
		  , PRODUCT_NO
		)VALUES(
		    SEQ_PRODUCT_NO.NEXTVAL
		  , 
		)
	</select>
	
	<select id="shoppingPayment" resultMap="productResultMap" parameterType="_int">
		SELECT
		    PRODUCT_NO
		  , PRODUCT_BRAND
		  , PRODUCT_TITLE
		  , PRODUCT_PRICE
		  , PRODUCT_NOTICE
		  , PRODUCT_BENEFIT
		  , PRODUCT_OPTION
		  , FILE_PATH
		  , CHANGE_FILE CHANGE_FILE1
		FROM PRODUCT
		JOIN PRODUCT_OPTION USING(PRODUCT_NO)
		JOIN PRODUCT_FILE USING(PRODUCT_NO)
		JOIN AT_FILE USING(F_NO)
		WHERE PRODUCT_NO = #{productNo}
		AND STATUS = 'N'
	</select>
	
	
	<!-- 배송지 관리 -->
	<select id="deliView" resultMap="addressResultMap" parameterType="_int" >
		SELECT
			   ADDRESS_NO
			 , RECEIVER
			 , ADDRESS
			 , RECEIVER_PHONE
			 , DEFAULT_ADDRESS
			 , USER_NO
		  FROM ADDRESS
		  JOIN MEMBER USING(USER_NO)
		 WHERE USER_NO = #{userNo}
	</select>
	
	
	<!-- 주문결제 정보 전달 -->
	<insert id="paymentInfoInsert" parameterType="com.kh.healthDao.manager.model.vo.Payment">
		INSERT INTO PAYMENT(
				PAY_NO
			  , PAY_DATE
			  , PAY_METHOD
			  , ORDERER_PHONE
			  , ORDERER_EMAIL
			  , ORDER_STATUS
			  , USER_NO
			  , TOTAL_PRICE
		)VALUES(
			    SEQ_PAY_NO.NEXTVAL
			  , SYSDATE
			  , 'card'
			  , #{ordererPhone}
			  , #{ordererEmail}
			  , 'N'
			  , #{userNo}
			  , #{totalPrice}
		)
	</insert>
	
	<insert id="paymentDetailInsert" parameterType="com.kh.healthDao.manager.model.vo.Payment">
		INSERT
		  INTO PAY_DETAIL
		  (
		  	PRODUCT_NO
		  , PAY_NO
		  , QUANTITY
		  )VALUES(
		  	#{ProductNo}
		  , SEQ_PAY_NO.CURRVAL
		  , 0
		  )
	</insert>
	
	
	
	
</mapper>